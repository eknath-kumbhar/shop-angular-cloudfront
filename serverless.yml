service: shop-angular-cloudfront
frameworkVersion: "3"
configValidationMode: error
useDotenv: true
deprecationNotificationMode: warn:summary
disabledDeprecations:
  - DEP_CODE_1

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-south-1
  profile: default

plugins:
  - serverless-finch
  - serverless-single-page-app-plugin

custom:
  ## Serverless-finch configuration
  client:
    bucketName: eknath-shop-angular-cloudfront
    distributionFolder: dist/app
    indexDocument: index.html
    errorDocument: index.html
  ## Serverless-single-page-app-plugin configuration:
  s3LocalPath: ${self:custom.client.distributionFolder}/
  s3BucketName: ${self:custom.client.bucketName}

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.client.bucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: ${self:custom.client.indexDocument}
          ErrorDocument: ${self:custom.client.errorDocument}

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Bucket
        PolicyDocument:
          Statement:
            - Sid: "AllowCloudFrontAccessIdentity"
              Effect: Allow
              Action: s3:GetObject
              Resource: arn:aws:s3:::${self:custom.client.bucketName}/*
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: Access identity between CloudFront and S3 bucket

    Distribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.client.bucketName}.s3.${self:provider.region}.amazonaws.com
              Id: myShopS3Origin
              S3OriginConfig:
                OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
          Enabled: true
          HttpVersion: http2
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            ForwardedValues:
              QueryString: false
              Headers:
                - Access-Control-Request-Header
                - Access-control-Request-Method
                - Origin
                - Authorization
              Cookies:
                Forward: none
            TargetOriginId: myShopS3Origin
            ViewerProtocolPolicy: allow-all
            Compress: true
            DefaultTTL: 0
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

  Outputs:
    BucketOutput:
      Value: Ref:Bucket
    WebAppCloudFrontDistributionOutput:
      Value:
        Fn::GetAtt: [Distribution, DomainName]
